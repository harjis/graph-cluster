apiVersion: batch/v1
kind: Job
metadata:
  name: db-create
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: db-create
          image: d0rka/graph-cluster-backend-phoenix
          command: ["/bin/sh", "-c"]
          args:
            - |
              sleep 2s
              trap "touch /tmp/pod/terminated" EXIT
              mix ecto.create
          env:
            - name: PGHOST
              value: 127.0.0.1
            - name: PGUSER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: POSTGRES_PASSWORD
            - name: PGDATABASE_DEVELOPMENT
              value: graph-cluster_development
            - name: PGDATABASE_TEST
              value: graph-cluster_test
            - name: PGDATABASE_PRODUCTION
              value: graph-cluster_production
          volumeMounts:
            - mountPath: /tmp/pod
              name: tmp-pod
        -
          name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          command: ["/bin/sh", "-c"]
          args:
            - |
              /cloud_sql_proxy -instances=graph-elixir-271706:europe-north1:graph-database=tcp:5432 -credential_file=/secrets/cloudsql/credentials.json \
              & CHILD_PID=$!(while true; do if [[ -f "/tmp/pod/terminated" ]]; \
              then kill $CHILD_PID; echo "Killed $CHILD_PID because the main container terminated."; fi; sleep 1; done) \
              & wait $CHILD_PID if [[ -f "/tmp/pod/terminated" ]]; then exit 0; echo "Job completed. Exiting..."; fi
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: tmp-pod
              mountPath: /tmp/pod
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
